package com.farmer.be.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class CarouselContentAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCarouselContentAllPropertiesEquals(CarouselContent expected, CarouselContent actual) {
        assertCarouselContentAutoGeneratedPropertiesEquals(expected, actual);
        assertCarouselContentAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCarouselContentAllUpdatablePropertiesEquals(CarouselContent expected, CarouselContent actual) {
        assertCarouselContentUpdatableFieldsEquals(expected, actual);
        assertCarouselContentUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCarouselContentAutoGeneratedPropertiesEquals(CarouselContent expected, CarouselContent actual) {
        assertThat(actual)
            .as("Verify CarouselContent auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCarouselContentUpdatableFieldsEquals(CarouselContent expected, CarouselContent actual) {
        assertThat(actual)
            .as("Verify CarouselContent relevant properties")
            .satisfies(a -> assertThat(a.getCarouselTag()).as("check carouselTag").isEqualTo(expected.getCarouselTag()))
            .satisfies(a -> assertThat(a.getShowViewMore()).as("check showViewMore").isEqualTo(expected.getShowViewMore()))
            .satisfies(a -> assertThat(a.getViewMoreLink()).as("check viewMoreLink").isEqualTo(expected.getViewMoreLink()))
            .satisfies(a -> assertThat(a.getViewMoreUtm()).as("check viewMoreUtm").isEqualTo(expected.getViewMoreUtm()))
            .satisfies(a -> assertThat(a.getPixelLink()).as("check pixelLink").isEqualTo(expected.getPixelLink()))
            .satisfies(a -> assertThat(a.getIsActive()).as("check isActive").isEqualTo(expected.getIsActive()))
            .satisfies(a -> assertThat(a.getCreateddBy()).as("check createddBy").isEqualTo(expected.getCreateddBy()))
            .satisfies(a -> assertThat(a.getCreatedTime()).as("check createdTime").isEqualTo(expected.getCreatedTime()))
            .satisfies(a -> assertThat(a.getUpdatedBy()).as("check updatedBy").isEqualTo(expected.getUpdatedBy()))
            .satisfies(a -> assertThat(a.getUpdatedTime()).as("check updatedTime").isEqualTo(expected.getUpdatedTime()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCarouselContentUpdatableRelationshipsEquals(CarouselContent expected, CarouselContent actual) {
        // empty method
    }
}
