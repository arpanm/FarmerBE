package com.farmer.be.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class PickupGradationAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPickupGradationAllPropertiesEquals(PickupGradation expected, PickupGradation actual) {
        assertPickupGradationAutoGeneratedPropertiesEquals(expected, actual);
        assertPickupGradationAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPickupGradationAllUpdatablePropertiesEquals(PickupGradation expected, PickupGradation actual) {
        assertPickupGradationUpdatableFieldsEquals(expected, actual);
        assertPickupGradationUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPickupGradationAutoGeneratedPropertiesEquals(PickupGradation expected, PickupGradation actual) {
        assertThat(actual)
            .as("Verify PickupGradation auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPickupGradationUpdatableFieldsEquals(PickupGradation expected, PickupGradation actual) {
        assertThat(actual)
            .as("Verify PickupGradation relevant properties")
            .satisfies(a -> assertThat(a.getItemGrade()).as("check itemGrade").isEqualTo(expected.getItemGrade()))
            .satisfies(a -> assertThat(a.getGradedBy()).as("check gradedBy").isEqualTo(expected.getGradedBy()))
            .satisfies(a -> assertThat(a.getGradedTime()).as("check gradedTime").isEqualTo(expected.getGradedTime()))
            .satisfies(a -> assertThat(a.getIsActive()).as("check isActive").isEqualTo(expected.getIsActive()))
            .satisfies(a -> assertThat(a.getCreateddBy()).as("check createddBy").isEqualTo(expected.getCreateddBy()))
            .satisfies(a -> assertThat(a.getCreatedTime()).as("check createdTime").isEqualTo(expected.getCreatedTime()))
            .satisfies(a -> assertThat(a.getUpdatedBy()).as("check updatedBy").isEqualTo(expected.getUpdatedBy()))
            .satisfies(a -> assertThat(a.getUpdatedTime()).as("check updatedTime").isEqualTo(expected.getUpdatedTime()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPickupGradationUpdatableRelationshipsEquals(PickupGradation expected, PickupGradation actual) {
        // empty method
    }
}
