package com.farmer.be.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class SupplyConfirmationAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSupplyConfirmationAllPropertiesEquals(SupplyConfirmation expected, SupplyConfirmation actual) {
        assertSupplyConfirmationAutoGeneratedPropertiesEquals(expected, actual);
        assertSupplyConfirmationAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSupplyConfirmationAllUpdatablePropertiesEquals(SupplyConfirmation expected, SupplyConfirmation actual) {
        assertSupplyConfirmationUpdatableFieldsEquals(expected, actual);
        assertSupplyConfirmationUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSupplyConfirmationAutoGeneratedPropertiesEquals(SupplyConfirmation expected, SupplyConfirmation actual) {
        assertThat(actual)
            .as("Verify SupplyConfirmation auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSupplyConfirmationUpdatableFieldsEquals(SupplyConfirmation expected, SupplyConfirmation actual) {
        assertThat(actual)
            .as("Verify SupplyConfirmation relevant properties")
            .satisfies(a -> assertThat(a.getConfirmDate()).as("check confirmDate").isEqualTo(expected.getConfirmDate()))
            .satisfies(a -> assertThat(a.getConfirmValue()).as("check confirmValue").isEqualTo(expected.getConfirmValue()))
            .satisfies(a -> assertThat(a.getIsActive()).as("check isActive").isEqualTo(expected.getIsActive()))
            .satisfies(a -> assertThat(a.getCreateddBy()).as("check createddBy").isEqualTo(expected.getCreateddBy()))
            .satisfies(a -> assertThat(a.getCreatedTime()).as("check createdTime").isEqualTo(expected.getCreatedTime()))
            .satisfies(a -> assertThat(a.getUpdatedBy()).as("check updatedBy").isEqualTo(expected.getUpdatedBy()))
            .satisfies(a -> assertThat(a.getUpdatedTime()).as("check updatedTime").isEqualTo(expected.getUpdatedTime()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSupplyConfirmationUpdatableRelationshipsEquals(SupplyConfirmation expected, SupplyConfirmation actual) {
        assertThat(actual)
            .as("Verify SupplyConfirmation relationships")
            .satisfies(a -> assertThat(a.getFarm()).as("check farm").isEqualTo(expected.getFarm()))
            .satisfies(a -> assertThat(a.getCrop()).as("check crop").isEqualTo(expected.getCrop()));
    }
}
